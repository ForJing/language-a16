# TextMate tutorial: http://manual.macromates.com/en/language_grammars
# https://gist.github.com/DamnedScholar/622926bcd222eb1ddc483d12103fd315#file-language-samplegrammar-cson
# see also https://github.com/JamesRitchie/language-matlab/blob/master/grammars/m.cson for reference

# Regex to convert keys to unquoted: '(include|match|captures|begin|end|beginCaptures|endCaptures|name|patterns|0|1|2|3|4|5|6|7|8|9|comment|fileTypes|scopeName|repository|contentName|firstLineMatch|foldingStartMarker|foldingStopMarker)':

scopeName: 'source.a16' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)

name: 'a16' # The title that will show up in grammar selection and on your status bar.

fileTypes: [
  'a16'
]
firstLineMatch: '' # A regular expression that is matched against the first line of the document when Atom is trying to decide if the grammar is appropriate. Useful for shell scripts, mostly.

foldingStartMarker: '' # A regular expression that checks for the start of a foldable area (such as `{`).

foldingStopMarker: '' # A regular expression that checks for the end of a foldable area (such as `}`). If both folding markers are matched in the same line, there will be no foldable area.

patterns: [
  {
    include: "#operators"
  },
  {
    include: "#strings"
  },
  {
    include: "#addresses"
  },
  {
    include: "#registers"
  },
  {
    include: "#numbers"
  },
  {
    include: "#comments"
  }
],
repository:  
  operators:
    patterns: [
      {
          match: "\\b(set|load|add|save|compare|jump_if_great|jump|save_from_register|set2|load2|add2|save2|subtract2|load_from_register|load_from_register2|jump_from_register|shift_right|and|halt)\\b"
          name: "entity.name.function.a16",
      }
    ]
  registers:
    patterns: [
      {
          name: "keyword.others.a16",
          match: "\\b(a1|a2|a3|c1|f1|pa)\\b"
      }
    ]
  addresses:
    patterns: [
     {
          name: "string.quoted.double.a16",
          match: "@\\w+"
      }
    ]

  numbers:
    patterns: [
      {
        name: "constant.numeric.a16",
        match: "\\d+"
      }
    ]
